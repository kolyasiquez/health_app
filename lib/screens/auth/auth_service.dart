// lib/screens/auth/auth_service.dart

import 'dart:developer';
import 'package:firebase_auth/firebase_auth.dart';
import '../../services/api_service.dart'; // üöÄ –Ü–ú–ü–û–†–¢–£–Ñ–ú–û

class AuthService {
  final _auth = FirebaseAuth.instance;
  final ApiService _apiService = ApiService(); // üöÄ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–£–Ñ–ú–û

  // üöÄ –û–ù–û–í–õ–ï–ù–ò–ô –ú–ï–¢–û–î –†–ï–Ñ–°–¢–†–ê–¶–Ü–á
  Future<User?> createUserWithEmailAndPassword(String email, String password, String name) async {
    try{
      final cred = await _auth.createUserWithEmailAndPassword(email: email, password: password);
      final user = cred.user;

      if (user != null) {
        // –ö–õ–Æ–ß–û–í–ò–ô –ö–†–û–ö: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—Ä–æ—Ñ—ñ–ª—é –≤ Firestore
        await _apiService.createUserDocument(user.uid, email, name);
      }
      return user;
    } on FirebaseAuthException catch(e){
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ e.message –¥–ª—è –∫—Ä–∞—â–æ—ó –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ —É UI
      log("Registration failed: ${e.message}");
    } catch(e){
      log("Something went wrong during registration: $e");
    }
    return null;
  }

  Future<User?> loginUserWithEmailAndPassword(String email, String password) async {
    try{
      final cred = await _auth.signInWithEmailAndPassword(email: email, password: password);
      return cred.user;
    } on FirebaseAuthException catch(e){
      log("Login failed: ${e.message}");
    } catch(e){
      log("Something went wrong during login");
    }
    return null;
  }

  Future<void> signOut() async {
    try{
      await _auth.signOut();
    }catch(e){
      log("Something went wrong during sign out");
    }
  }
}