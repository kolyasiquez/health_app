// lib/screens/auth/registration_screen.dart

import 'dart:developer';
import 'package:flutter/material.dart';
import 'package:health_app/screens/auth/auth_service.dart';

class RegistrationScreen extends StatefulWidget {
  const RegistrationScreen({super.key});

  @override
  State<RegistrationScreen> createState() => _RegistrationScreenState();
}

class _RegistrationScreenState extends State<RegistrationScreen> {
  final _auth = AuthService();

  final _nameController = TextEditingController();
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final _confirmPasswordController = TextEditingController();

  @override
  void dispose() {
    _nameController.dispose();
    _emailController.dispose();
    _passwordController.dispose();
    _confirmPasswordController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final primaryTeal = theme.colorScheme.primary;

    return Scaffold(
      // üöÄ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–≤—ñ—Ç–ª–∏–π —Ñ–æ–Ω Scaffold –∑ —Ç–µ–º–∏
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(24.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // üöÄ –Ü–∫–æ–Ω–∫–∞ —Ç–µ–ø–µ—Ä –±—ñ—Ä—é–∑–æ–≤–∞
              Icon(Icons.favorite, size: 100, color: primaryTeal),
              const SizedBox(height: 20),
              Text(
                '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç',
                style: theme.textTheme.headlineSmall,
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 40),
              // üöÄ –ü–æ–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –Ω–æ–≤—É InputDecorationTheme
              TextField(
                controller: _nameController,
                decoration: const InputDecoration(
                  labelText: '–Ü–º\'—è',
                  prefixIcon: Icon(Icons.person),
                ),
              ),
              const SizedBox(height: 20),
              TextField(
                controller: _emailController,
                decoration: const InputDecoration(
                  labelText: '–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞',
                  prefixIcon: Icon(Icons.email),
                ),
              ),
              const SizedBox(height: 20),
              TextField(
                controller: _passwordController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: '–ü–∞—Ä–æ–ª—å',
                  prefixIcon: Icon(Icons.lock),
                ),
              ),
              const SizedBox(height: 20),
              TextField(
                controller: _confirmPasswordController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: '–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å',
                  prefixIcon: Icon(Icons.lock),
                ),
              ),
              const SizedBox(height: 30),
              // üöÄ –ö–Ω–æ–ø–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î ElevatedButtonTheme (–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π)
              ElevatedButton(
                onPressed: _signup,
                child: const Text('–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'),
              ),
              const SizedBox(height: 10),
              // üöÄ TextButton –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î TextButtonTheme (–±—ñ—Ä—é–∑–æ–≤–∏–π)
              TextButton(
                onPressed: () {
                  Navigator.pop(context);
                },
                child: const Text(
                  '–í–∂–µ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç? –£–≤—ñ–π—Ç–∏',
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  // üöÄ –û–ù–û–í–õ–ï–ù–ê –õ–û–ì–Ü–ö–ê –†–ï–Ñ–°–¢–†–ê–¶–Ü–á
  _signup() async {
    // 1. –ü–ï–†–ï–í–Ü–†–ö–ê –ü–ê–†–û–õ–Ü–í
    if (_passwordController.text != _confirmPasswordController.text) {
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('–ü–æ–º–∏–ª–∫–∞: –ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å.')),
        );
      }
      return;
    }

    // 2. –í–ò–ö–õ–ò–ö –°–ï–†–í–Ü–°–£ –ó –Ü–ú'–Ø–ú
    final user = await _auth.createUserWithEmailAndPassword(
        _emailController.text,
        _passwordController.text,
        _nameController.text
    );

    if (user != null) {
      log("User has been created successfully and profile document saved.");
      if (mounted) {
        // –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
        Navigator.pushReplacementNamed(context, '/patient_dashboard');
      }
    } else {
      // 3. –û–ë–†–û–ë–ö–ê –ü–û–ú–ò–õ–û–ö
      log("Registration failed, user object is null.");
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ email –∞–±–æ –ø–∞—Ä–æ–ª—å (–º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤).')),
        );
      }
    }
  }
}